{"version":3,"sources":["components/Icons sync /^/.//.*$","components/Icons/IconBb8.svg","components/Icons/IconC3po.svg","components/Icons/IconCharlie.png","components/Icons/IconFett.svg","components/Icons/IconFranklin.png","components/Icons/IconLucy.png","components/Icons/IconSnoopy.png","components/Icons/IconVader.svg","serviceWorker.js","core/actions/LeftNavigation/LeftNavigation.actions.js","core/reducers/LeftNavigation/LeftNavigation.reducer.js","core/constants/routes.js","core/actions/ThemeToggle/ThemeToggle.actions.js","core/reducers/ThemeToggle/ThemeToggle.reducer.js","core/reducers/index.js","core/store/index.js","components/Tab.js","components/Tabs.js","components/Characters.js","components/SCTitle.js","components/layout/SCTabContent.js","pages/StarWarsPage.js","pages/PeanutsPage.js","components/SCNav.js","components/SCLeftNavigation.js","theme.js","components/SCThemeSelectorButton.js","components/layout/SCContainer.js","components/layout/SCContent.js","components/layout/SCLeftNav.js","App.js","core/utils/themeUtils.js","index.js"],"names":["map","./IconBb8.svg","./IconC3po.svg","./IconCharlie.png","./IconFett.svg","./IconFranklin.png","./IconLucy.png","./IconSnoopy.png","./IconVader.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Boolean","window","location","hostname","match","SELECTION_CHANGED","INITIAL_STATE","selectedItem","undefined","navItems","route","label","leftNavigationReducer","state","arguments","length","action","type","objectSpread","selectedTheme","themeToggleReducer","rootReducer","combineReducers","leftNavigationState","themeState","store","createStore","composeWithDevTools","SCTabItem","styled","li","_templateObject","props","isCurrent","theme","colors","panelColor","tabColor","units","tabBorderRadius","tabSelectedTextColor","tabTextColor","panelBorderColor","Tab","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","preventDefault","esm_extends","react_default","a","createElement","aria-controls","aria-selected","role","onClick","name","React","Component","SCTabList","ul","Tabs_templateObject","Tabs","tab","console","log","changeTab","data","Tab_Tab","key","currentTab","defaultProps","SCPanel","div","Characters_templateObject","panelBorderRadius","SCText","_templateObject2","SCTitle","h3","_templateObject3","Characters","starwars","peanuts","characters","current","characterDetails","page","character","src","require","icon","alt","className","Characters_SCTitle","description","Fragment","starwarspage","peanutspage","StyledH4","h4","SCTitle_templateObject","H4Color","StyledDiv","SCTabContent_templateObject","SCTabContent","StarWarsPage","setState","_this2","axios","get","then","res","catch","error","SCTitle_SCTitle","Tabs_Tabs","SCTabContent_SCTabContent","goMobile","components_Characters","width","innerWidth","PeanutsPage","tabText","StyledBootstrapNav","Nav","SCNav_templateObject","navLiColor","btnDefaultDisabledColor","bodyBorderColor","navItemColor","navItemColorHover","navItemColorActive","navItemBgColorActive","StyledBootstrapNavItem","NavItem","SCNav_templateObject2","listColor","SCNavItem","_Component","apply","inherits","createClass","value","SCNav","SCLeftNavigation","_this$props","onNavItemClick","item","selectItem","history","push","stacked","SCNav_SCNav","bsStyle","activeKey","find","getActiveKey","SCNav_SCNavItem","eventKey","onSelect","compose","withRouter","connect","dispatch","src_theme","bodyBgColor","baseTextColor","leftNavColor","leftNavBorderColor","rightPanelColor","SCToggleButtonGroup","ToggleButtonGroup","SCThemeSelectorButton_templateObject","SLThemeSelectorButton","_getPrototypeOf2","_len","args","Array","_key","concat","handleChange","selection","selectTheme","onChange","ToggleButton","SCContainer_templateObject","SCContainer","SCContainer_StyledDiv","SCContent_templateObject","SCContent","SCContent_StyledDiv","SCLeftNav_templateObject","SCLeftNav","SCLeftNav_StyledDiv","GlobalStyle","createGlobalStyle","App_templateObject","App","themeName","determineTheme","determineValue","styled_components_browser_esm","BrowserRouter","SCContainer_SCContainer","SCLeftNav_SCLeftNav","SCThemeSelectorButton","components_SCLeftNavigation","SCContent_SCContent","Route","exact","path","component","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.268ed16f.chunk.js","sourcesContent":["var map = {\n\t\"./IconBb8.svg\": 107,\n\t\"./IconC3po.svg\": 108,\n\t\"./IconCharlie.png\": 109,\n\t\"./IconFett.svg\": 110,\n\t\"./IconFranklin.png\": 111,\n\t\"./IconLucy.png\": 112,\n\t\"./IconSnoopy.png\": 113,\n\t\"./IconVader.svg\": 114\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 106;","module.exports = __webpack_public_path__ + \"static/media/IconBb8.7d8bda37.svg\";","module.exports = __webpack_public_path__ + \"static/media/IconC3po.d782466f.svg\";","module.exports = __webpack_public_path__ + \"static/media/IconCharlie.7e5f37c1.png\";","module.exports = __webpack_public_path__ + \"static/media/IconFett.fd0de2e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/IconFranklin.f9b1caaa.png\";","module.exports = __webpack_public_path__ + \"static/media/IconLucy.d929e9af.png\";","module.exports = __webpack_public_path__ + \"static/media/IconSnoopy.cb12bc37.png\";","module.exports = __webpack_public_path__ + \"static/media/IconVader.2f65fb23.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const SELECTION_CHANGED  = 'home/leftnav/selection-changed';\nexport const selectItem = (selectedItem) => {\n    return {\n        type: SELECTION_CHANGED,\n        selectedItem\n    }\n};","import { SELECTION_CHANGED } from \"../../actions/LeftNavigation/LeftNavigation.actions\";\nimport * as routes from \"../../../core/constants/routes\";\n\n\nexport const INITIAL_STATE = {\n    selectedItem: undefined,\n    navItems: [\n        {id: 1, route: routes.STARWARS,   label: 'Star Wars'},\n        {id: 2, route: routes.PEANUTS,  label: 'Peanuts'}\n    ]\n};\n\nfunction leftNavigationReducer(state = INITIAL_STATE, action) {\n    switch(action.type) {\n\n        case SELECTION_CHANGED: {\n            return {\n                ...state,\n                selectedItem: action.selectedItem\n            }\n        }\n\n        default : return state;\n    }\n}\n\nexport default leftNavigationReducer","export const STARWARS  = `starwars`;\nexport const PEANUTS  = `peanuts`;","export const SELECTION_CHANGED  = 'home/theme/theme-changed';\nexport const selectTheme = (selectedTheme) => {\n    return {\n        type: SELECTION_CHANGED,\n        selectedTheme\n    }\n};","import { SELECTION_CHANGED } from \"../../actions/ThemeToggle/ThemeToggle.actions\";\n\nexport const INITIAL_STATE = {\n    selectedTheme: undefined\n};\n\nfunction themeToggleReducer(state = INITIAL_STATE, action) {\n    switch(action.type) {\n\n        case SELECTION_CHANGED: {\n            return {\n                ...state,\n                selectedTheme: action.selectedTheme\n            }\n        }\n\n        default : return state;\n    }\n}\n\nexport default themeToggleReducer","import { combineReducers } from 'redux';\nimport leftNavigationReducer from \"./LeftNavigation/LeftNavigation.reducer\";\nimport themeToggleReducer from \"./ThemeToggle/ThemeToggle.reducer\";\n\nconst rootReducer = combineReducers({\n    leftNavigationState: leftNavigationReducer,\n    themeState: themeToggleReducer\n});\n\nexport default rootReducer;\n\n\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools()\n);\n\nexport default store;","import React from 'react'\nimport styled from 'styled-components'\n\nconst SCTabItem = styled.li`\n    background-color: ${props => (props.isCurrent \n        ? props => props.theme.colors.panelColor\n        : props.theme.colors.tabColor\n    )};\n    border-top-left-radius: ${props => props.theme.units.tabBorderRadius};\n    border-top-right-radius: ${props => props.theme.units.tabBorderRadius};\n    padding: 8px 8px 5px 8px;\n    margin-left: 1px;\n    color: ${props => (props.isCurrent ? props.theme.colors.tabSelectedTextColor : props.theme.colors.tabTextColor)};\n    font-weight: bold;\n    border: 1px solid ${props => props.theme.colors.panelBorderColor};\n    border-bottom-color: transparent;\n    margin-right: 2px;\n`;\n\nexport default class Tab extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick (e) {\n        e.preventDefault();\n        this.props.handleClick();\n    }\n\n    render () {\n        const {...props} = this.props;\n        return (\n            <SCTabItem\n                aria-controls={'panel-' + props.id}\n                aria-selected='true'\n                role='tab'\n                isCurrent={props.isCurrent}\n            >\n                <span onClick={this.handleClick}>\n                    {props.name}\n                </span>\n            </SCTabItem>\n        )\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types';\n\nimport Tab from '../components/Tab.js'\nimport styled from 'styled-components'\n\nconst SCTabList = styled.ul`\n    display: flex;\n    flex-direction: row;\n    margin: 0 3px -1px 3px;\n      \n    @media only screen and (max-width: 500px) {\n        font-size: 12px;\n        padding: 0 14px;\n        max-width: none;\n        width: 100%;\n    }\n`\n\nexport default class Tabs extends React.Component {\n    static propTypes = {\n        data: PropTypes.array\n    };\n\n    static defaultProps = {\n        data: []\n    };\n\n    constructor (props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick (tab) {\n        console.log(\"tab \", tab);\n        this.props.changeTab(tab)\n    }\n\n    render () {\n        const {...props} = this.props;\n        return (\n            <SCTabList role='tablist'>\n                {this.props.data.map(\n                    function (tab) {\n                        return (\n                            <Tab\n                                key={tab.id}\n                                handleClick={this.handleClick.bind(this, tab)}\n                                name={tab.name}\n                                isCurrent={props.currentTab === tab.id}\n                            />\n                        )\n                    }.bind(this)\n                )}\n            </SCTabList>\n        )\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\"\n\nconst SCPanel = styled.div`\n    display: flex;\n    flex-direction: row;\n    padding: 14px;\n    border: 1px solid ${props => props.theme.colors.panelBorderColor};\n    border-radius: ${props => props.theme.units.panelBorderRadius};\n    background-color: ${props => props.theme.colors.panelColor};\n    \n    img {\n       max-height: 72px;\n    }\n  \n    @media only screen and (max-width: 500px) {\n        font-size: 13px;\n        max-width: none;\n        padding: 10px;\n        border-radius: 9px;\n    }\n`\n\nconst SCText = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-left: 12px;\n`\n\nconst SCTitle = styled.h3`\n    margin: 0;\n`\n\nclass Characters extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            starwars: null,\n            peanuts: null,\n            characters: null\n        }\n    }\n\n    // not totally required for this class\n    static propTypes = {\n        starwars: PropTypes.array,\n        peanuts: PropTypes.array,\n        characters: PropTypes.array\n    };\n\n    static defaultProps = {\n        starwarspage: '',\n        peanutspage: ''\n    };\n\n   render () {\n\n        const {...props} = this.props;\n        let current = props.currentTab;\n        const page = props.page;\n\n        const characterDetails = page.map((character) => {\n            if (character.id === current) {\n                return <SCPanel\n                        key={character.id}\n                    >\n                        <img src={require(\"./Icons/\" + character.icon)} alt={character.icon} />\n                        <SCText className='m_tabpanel_text' key={character.id}>\n                            <SCTitle>{character.name}</SCTitle>\n                            <p>{character.description}</p>\n                        </SCText>\n                    </SCPanel>\n            } else {\n                return null;\n            }\n        });\n\n        return (\n                <React.Fragment>\n                   {characterDetails}\n                </React.Fragment>\n        )\n    }\n}\n\nexport default Characters;","import React, {Component} from 'react'\nimport styled from \"styled-components\";\n\nconst StyledH4 = styled.h4`\n    line-height: 2em;\n    margin: 0 0 2em 0;\n    display: inline-block;\n    color: ${props => props.theme.colors.H4Color};\n`;\n\nexport default class SCTitle extends Component {\n    render() {\n        const {...props} = this.props;\n        return (\n            <StyledH4\n                {...props}\n            />\n        )\n    }\n}","import React, {Component} from 'react'\nimport styled from \"styled-components\";\n\nconst StyledDiv = styled.div`\n    background-color: transparent;\n    margin: 0 auto;\n`;\n\nexport default class SCTabContent extends Component {\n    render() {\n        const {...props} = this.props;\n        return (\n            <StyledDiv\n                {...props}\n            />\n        )\n    }\n}","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types'\nimport Tabs from \"../components/Tabs\";\nimport Characters from \"../components/Characters\";\nimport axios from \"axios\";\nimport SCTitle from \"../components/SCTitle\";\nimport SCTabContent from \"../components/layout/SCTabContent\";\n\nexport default class StarWarsPage extends Component {\n    // not totally required for this class\n    static propTypes = {\n        currentTab: PropTypes.number,\n        width: PropTypes.number,\n        goMobile: PropTypes.bool,\n        starwars: PropTypes.array,\n        data: PropTypes.array\n    };\n\n    static defaultProps = {\n        currentTab: 1,\n        width: window.innerWidth,\n        goMobile: false,\n        data: []\n    };\n\n    state = {\n        currentTab: this.props.currentTab || 1,\n        data: this.props.data\n    };\n\n    componentDidMount () {\n        axios.get('https://raw.githubusercontent.com/chrismathers/react16-example-app/gh-pages/data.json')\n            .then(res => {\n                this.setState({\n                    data: res.data.starwars.characters\n                })\n            })\n            .catch(function (error) {\n                console.log(\"The Axios call returned this error: \" + error)\n            })\n    }\n\n    changeTab = tab => {\n        this.setState({ currentTab: tab.id })\n    };\n\n    render() {\n        const data = this.state.data;\n        return (\n            <div className='c_tabsSwitcher'>\n                <SCTitle>Star Wars</SCTitle>\n                <Tabs\n                    currentTab={this.state.currentTab}\n                    changeTab={this.changeTab}\n                    data={data}\n                />\n                <SCTabContent>\n                {!this.state.goMobile\n                    ? <Characters\n                        page={data}\n                        currentTab={this.state.currentTab}\n                    />\n                    : <span>\n                        {/*<IconC3po />\n                        <IconVader />\n                        <IconBb8 />\n                        <IconFett />*/}\n                      </span>}\n                </SCTabContent>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types'\nimport Tabs from \"../components/Tabs\";\nimport Characters from \"../components/Characters\";\nimport axios from \"axios\";\nimport SCTabContent from \"../components/layout/SCTabContent\";\nimport SCTitle from \"../components/SCTitle\";\n\nexport default class PeanutsPage extends Component {\n    // not totally required for this class\n    static propTypes = {\n        currentTab: PropTypes.number,\n        width: PropTypes.number,\n        tabText: PropTypes.string,\n        data: PropTypes.array\n    };\n\n    static defaultProps = {\n        currentTab: 1,\n        width: window.innerWidth,\n        tabText: '',\n        data: []\n    };\n\n    state = {\n        currentTab: this.props.currentTab || 1,\n        data: this.props.data\n    };\n\n    componentDidMount () {\n        axios.get('https://raw.githubusercontent.com/chrismathers/react16-example-app/gh-pages/data.json')\n            .then(res => {\n                this.setState({\n                    data: res.data.peanuts.characters\n                })\n            })\n            .catch(function (error) {\n                console.log(\"The Axios call returned this error: \" + error)\n            })\n    }\n\n    changeTab = tab => {\n        this.setState({ currentTab: tab.id })\n    };\n\n    render() {\n        const data = this.state.data;\n        return (\n            <div className='c_tabsSwitcher'>\n                <SCTitle>Peanuts</SCTitle>\n                <Tabs\n                    currentTab={this.state.currentTab}\n                    changeTab={this.changeTab}\n                    data={data}\n                />\n                <SCTabContent>\n                {!this.state.goMobile\n                    ? <Characters\n                        page={data}\n                        currentTab={this.state.currentTab}\n                    />\n                    : <span>\n                        {/*<IconCharlie />\n                        <IconFranklin />\n                        <IconLucy />\n                        <IconSnoopy />*/}\n                      </span>}\n                </SCTabContent>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport styled from \"styled-components\";\nimport {Nav, NavItem} from 'react-bootstrap';\n\nconst StyledBootstrapNav = styled(Nav)`\n    &.nav {\n      margin-bottom: 4em;\n      padding-left: 0;\n      list-style: none;\n    }\n    .nav > li {\n      position: relative;\n      display: block;\n    }\n    &.nav > li > a {\n      padding: 15px;\n    }\n    .nav > li > a:hover,\n    .nav > li > a:focus {\n      text-decoration: none;\n      background-color: ${props => props.theme.colors.navLiColor};\n    }\n    .nav > li.disabled > a {\n      color: ${props => props.theme.colors.btnDefaultDisabledColor};\n    }\n    .nav > li.disabled > a:hover,\n    .nav > li.disabled > a:focus {\n      color: ${props => props.theme.colors.btnDefaultDisabledColor};\n      text-decoration: none;\n      background-color: transparent;\n      cursor: not-allowed;\n    }\n    .nav .open > a,\n    .nav .open > a:hover,\n    .nav .open > a:focus {\n      background-color: ${props => props.theme.colors.navLiColor};\n    }\n    .nav &.nav-divider {\n      height: 1px;\n      margin: 9px 0;\n      overflow: hidden;\n      background-color: ${props => props.theme.colors.bodyBorderColor};\n    }\n    .nav > li > a > img {\n      max-width: none;\n    }\n    &.nav-tabs {\n      border: none;\n      font-weight: normal;\n    }\n    &.nav-tabs > li {\n      float: left;\n      margin-bottom: -1px;\n      border-bottom: none;\n      border-top: 1px solid ${props => props.theme.colors.bodyBorderColor};\n    }\n    &.nav-tabs > li:last-of-type {\n      border-bottom: 1px solid ${props => props.theme.colors.bodyBorderColor};\n    }\n    \n    &.nav-tabs > li > a {\n      font-weight: normal;\n      margin-right: 0;\n      border-radius: 0;\n      color: ${props => props.theme.colors.navItemColor};\n    }\n    &.nav-tabs > li > a:hover {\n      border-color: transparent;\n      border-radius: 0;\n      color: ${props => props.theme.colors.navItemColorHover};\n    }\n    &.nav-tabs > li.active > a,\n    &.nav-tabs > li.active > a:hover,\n    &.nav-tabs > li.active > a:focus {\n      color: ${props => props.theme.colors.navItemColorActive};\n      background-color: ${props => props.theme.colors.navItemBgColorActive};\n      border: none;\n      border-radius: 0;\n      font-weight: 500;\n      margin-right: 0;\n    }\n`;\n\nconst StyledBootstrapNavItem = styled(NavItem)`\n    width: 100%;\n    font-size: 15px;\n    font-weight: bold;\n    font-style: normal;\n    font-stretch: normal;\n    line-height: normal;\n    letter-spacing: normal;\n    border: none;\n    background-color: transparent;\n    padding: 0;\n    border-radius: 0;\n    \n    &:first-of-type {\n      border: none;\n    }\n    &:first-of-type,\n    &:last-of-type {\n      border-radius: 0;\n    }\n    \n    &.list-group-item {\n      color: ${props => props.theme.colors.listColor};\n    }\n`;\n\n\nexport class SCNavItem extends Component {\n    render() {\n        const {...props} = this.props;\n        return <StyledBootstrapNavItem {...props}/>\n    }\n}\n\nexport default class SCNav extends Component {\n    render() {\n        const {...props} = this.props;\n        return (\n            <StyledBootstrapNav\n                {...props}\n            />\n        );\n    }\n}","import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from \"recompose\";\nimport { selectItem } from \"../core/actions/LeftNavigation/LeftNavigation.actions\";\nimport SCNav, {SCNavItem} from \"./SCNav\";\n\nexport class SCLeftNavigation extends Component {\n\n    render() {\n\n        const {\n            selectedItem,\n            navItems\n        } = this.props;\n\n        const onNavItemClick = (item) => {\n            this.props.selectItem(item);\n            this.props.history.push(item.route);\n        };\n\n        const getActiveKey = selectedItem => navItems.find( item => item.id === selectedItem.id );\n\n        let stacked = this.props.stacked;\n\n        return (\n            <SCNav\n                bsStyle=\"tabs\"\n                activeKey={getActiveKey(selectedItem||navItems[0])}\n                stacked={stacked}\n            >\n                {navItems.map(item => <SCNavItem key={item.id} eventKey={item} onSelect={onNavItemClick}>{item.label}</SCNavItem>)}\n            </SCNav>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    selectedItem: state.leftNavigationState.selectedItem\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    selectItem: item => dispatch(selectItem(item)),\n});\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps)\n)(SCLeftNavigation);","export default {\n\n    lightTheme: {\n        colors: {\n            bodyBgColor: '#5591d4',\n            baseTextColor: '#000',\n            panelColor: 'white',\n            panelBorderColor: 'darkgray',\n            tabColor: 'gainsboro',\n            tabTextColor: '#1d6ab7',\n            tabSelectedTextColor: 'black',\n            leftNavColor: 'blanchedalmond',\n            leftNavBorderColor: 'darkgray',\n            rightPanelColor: '#f2f2f2',\n            H4Color: 'black'\n        },\n\n        units: {\n            tabBorderRadius: '10px',\n            panelBorderRadius: '17px'\n        }\n    },\n\n    darkTheme: {\n        colors: {\n            bodyBgColor: '#5591d4',\n            baseTextColor: '#000',\n            panelColor: 'white',\n            panelBorderColor: 'transparent',\n            tabColor: 'gainsboro',\n            tabTextColor: '#1d6ab7',\n            tabSelectedTextColor: 'black',\n            leftNavColor: 'aliceblue',\n            leftNavBorderColor: 'lightskyblue',\n            rightPanelColor: 'black',\n            H4Color: 'white'\n        },\n\n        units: {\n            tabBorderRadius: '10px',\n            panelBorderRadius: '17px'\n        }\n    }\n};","import React, {Component} from 'react'\nimport {\n    ToggleButtonGroup,\n    ToggleButton\n} from 'react-bootstrap';\nimport styled from 'styled-components';\n\nimport {\n    selectTheme\n} from \"../core/actions/ThemeToggle/ThemeToggle.actions\";\n\nimport {compose} from \"recompose\";\nimport connect from \"react-redux/es/connect/connect\";\n\nconst SCToggleButtonGroup = styled(ToggleButtonGroup)`\n    padding-top: 25px;\n    margin: 15px 15px 30px;\n    display: flex;\n    justify-content: center;\n`;\n\nexport class SLThemeSelectorButton extends Component {\n\n    handleChange = (selection) => {\n        this.props.selectTheme(selection);\n    };\n\n    render() {\n        const {\n            selectedTheme\n        } = this.props;\n\n        return <SCToggleButtonGroup\n            name=\"themeSelectorToggle\"\n            type=\"radio\"\n            value={selectedTheme}\n            onChange={this.handleChange}\n        >\n            <ToggleButton value={1}>Light Theme</ToggleButton>\n            <ToggleButton value={2}>Dark Theme</ToggleButton>\n        </SCToggleButtonGroup>\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    selectedTheme: state.themeState.selectedTheme\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    selectTheme: selection => dispatch(selectTheme(selection)),\n});\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps)\n)(SLThemeSelectorButton);","import React, {Component} from 'react'\nimport styled from \"styled-components\";\n\nconst StyledDiv = styled.div`\n  background-color: ${props => props.theme.colors.leftNavColor};\n  max-width: 80%;\n  height: 100vh;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin: 0 auto;\n`;\n\nexport default class SCContainer extends Component {\n    render() {\n        const {...props} = this.props;\n        return (\n            <StyledDiv\n                {...props}\n            />\n        )\n    }\n}","import React, {Component} from 'react'\nimport styled from \"styled-components\";\n\nconst StyledDiv = styled.div`\n  background-color: ${props => props.theme.colors.rightPanelColor};\n  padding-top: 40px;\n  width: 100%;\n  \n`;\n\nexport default class SCContent extends Component {\n    render() {\n        const {...props} = this.props;\n        return (\n            <StyledDiv\n                {...props}\n            />\n        )\n    }\n}","import React, {Component} from 'react'\nimport styled from \"styled-components\";\n\nconst StyledDiv = styled.div`\n  border-left: 1px solid ${props => props.theme.colors.leftNavBorderColor};\n  border-right: 1px solid ${props => props.theme.colors.leftNavBorderColor};\n`;\n\nexport default class SCLeftNav extends Component {\n    render() {\n        const {...props} = this.props;\n        return (\n            <StyledDiv\n                {...props}\n            />\n        )\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport StarWarsPage from \"./pages/StarWarsPage\";\nimport PeanutsPage from \"./pages/PeanutsPage\";\nimport './App.css';\n\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\"\nimport SCLeftNavigation from \"./components/SCLeftNavigation\";\nimport * as routes from \"./core/constants/routes\";\nimport {determineTheme, determineValue} from \"./core/utils/themeUtils\";\nimport {connect} from \"react-redux\";\nimport SLThemeSelectorButton from \"./components/SCThemeSelectorButton\";\nimport SCContainer from \"./components/layout/SCContainer\";\nimport SCContent from \"./components/layout/SCContent\";\nimport SCLeftNav from \"./components/layout/SCLeftNav\";\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        margin: 0 auto;\n        background-color: ${props => props.theme.colors.bodyBgColor};\n        color: ${props => props.theme.colors.baseTextColor};\n        font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    }\n    .flex-row {\n          display: flex;\n          flex-direction: row;\n    }\n    .flex-col {\n          display: flex;\n          flex-direction: column;\n    }\n    p {\n        margin: 0;\n    }\n    svg {\n        min-width: 48px;\n    }\n    ul {\n        list-style: none;\n    }\n    .c_tabsSwitcher {\n          min-width: 500px;\n          max-width: 40%;\n          margin: 0 auto;\n    }\n    \n    .nav--is-hidden {\n        display: none;\n    }\n    \n    @media only screen and (max-width: 500px) {\n        .c_tabsSwitcher {\n            min-width: 210px;\n            max-width: none;\n            margin: 0;\n        }\n    }\n`;\n\nclass App extends Component {\n\n    render () {\n        const navItems = [\n            {id: 1, route: routes.STARWARS,   label: 'Star Wars'},\n            {id: 2, route: routes.PEANUTS,  label: 'Peanuts'}\n        ];\n\n        const { selectedTheme } = this.props;\n        const theme = determineTheme(determineValue(selectedTheme));\n\n        return (\n            <ThemeProvider theme={theme}>\n                <Router>\n                    <React.Fragment>\n                        <GlobalStyle/>\n                        <SCContainer>\n                            <SCLeftNav>\n                                <SLThemeSelectorButton />\n                                <SCLeftNavigation stacked navItems={navItems} />\n                            </SCLeftNav>\n                            <SCContent>\n                                <Route exact path=\"/\" component={StarWarsPage} />\n                                <Route path=\"/starwars\" component={StarWarsPage} />\n                                <Route path=\"/peanuts\" component={PeanutsPage} />\n                            </SCContent>\n                        </SCContainer>\n                    </React.Fragment>\n                </Router>\n            </ThemeProvider>\n        )\n    }\n}\n\n\n//export default App;\n\nconst mapStateToProps = (state) => ({\n    selectedTheme: state.themeState.selectedTheme\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","import theme from \"../../theme\";\n\nexport const determineTheme = (themeName) => {\n    switch (themeName) {\n        case \"dark\":\n            return theme.darkTheme;\n        case \"light\":\n        default:\n            return theme.lightTheme;\n    }\n};\n\nexport const determineKey = (selectedTheme) => {\n    switch (selectedTheme) {\n        case \"dark\":\n            return 2;\n        case \"light\":\n        default:\n            return 1;\n    }\n};\n\nexport const determineValue = (selection) => {\n    switch (selection) {\n        case 1:\n            return \"light\";\n        case 2:\n            return \"dark\";\n        default:\n            return \"light\";\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./core/store\";\n\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}